# vim: ft=bash

export LESS=-FRSX
export MANPAGER="/bin/sh -c \"col -b | vim -c 'set ft=man ts=8 nomod nolist nonu noma' -\""

# Misc

alias todos="ag '(TODO|XXX|FIXME)' $@"
alias scratchpad="vim ~/scratchpad"
alias scratchpad-copy="cat ~/scratchpad | wl-copy"
alias screenshare="/usr/lib/xdg-desktop-portal-wlr &"

# Git-style diff
gdiff() {
  diff -u $@ | colordiff
}

# Generate random integet from 1 to arg
randint() {
  python -c "import random; print(random.randint(1, $1))"
}

# Change to last used working dir
cwd() {
  cd $(cat /tmp/workdir)
}

# git

# Change to git root dir
cd-git-root() {
  pushd .
  cd $(git rev-parse --show-toplevel)
}

# fzf

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
export FZF_DEFAULT_OPTS='--height=16 --layout=reverse --select-1 --bind=ctrl-p:toggle-preview'
export FZF_DEFAULT_COMMAND='fd --type f --hidden'
export FZF_CTRL_T_COMMAND='fd --type f --hidden --ignore-file <(echo .git)'
export FZF_ALT_C_COMMAND='fd --type d --hidden'
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"

fzf-branch-select() {
  echo $(git branch --format='%(refname:short)' | fzf --preview 'git lgf {}')
}

fzf-branch-widget() {
  local selected="$(fzf-branch-select)"
  READLINE_LINE="${READLINE_LINE:0:$READLINE_POINT}$selected${READLINE_LINE:$READLINE_POINT}"
  READLINE_POINT=$((READLINE_POINT + ${#selected}))
}

bind -x '"\C-g": fzf-branch-widget'

# terraform

# run terraform with logging
tf() {
  mkdir -p /tmp/tf
  terraform $* |& tee /tmp/tf/$(basename $PWD)__tf-$1__$(date +'%Y%m%d-%H%M%S').log
}

# print the path of the last created tf.log file
tf-last() {
  # '%C@' - ctime in epoch seconds, '%p' - path
  find /tmp/tf -name '*.log' -printf '%C@ %p\n' |
    sort -nr |
    head -1 |
    cut -d' ' -f2
}

# aws

aws_creds() {
  case "$1" in
  print)
    cat ~/.aws/credentials |
      grep ^aws |
      sed -e 's/^\([a-z_]\+\)/export \U\1/' -e 's/ = \(.\+\)/="\1"/'
    ;;
  load)
    source <(aws_creds print)
    ;;
  unset)
    for ENVAR in $(
      cat ~/.aws/credentials |
        grep ^aws |
        sed -e 's/^\([a-z_]\+\).*/\U\1/'
    ); do
      read -p "Unset $ENVAR? [y/n] "
      if [ "$REPLY" == "y" ]; then
        unset $ENVAR
      fi
    done
    ;;
  *)
    echo "Usage: $0 (print | load | unset)"
    ;;
  esac
}

# direnv

_direnv_hook() {
  local previous_exit_status=$?
  trap -- '' SIGINT
  eval "$("/usr/bin/direnv" export bash)"
  trap - SIGINT
  return $previous_exit_status
}
if ! [[ "${PROMPT_COMMAND:-}" =~ _direnv_hook ]]; then
  PROMPT_COMMAND="_direnv_hook${PROMPT_COMMAND:+;$PROMPT_COMMAND}"
fi

# docker

alias dockerip="docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}'"
