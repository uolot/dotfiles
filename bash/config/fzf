# vim: ft=bash

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
export FZF_DEFAULT_OPTS='--height=16 --layout=reverse --select-1 --bind=ctrl-p:toggle-preview'
export FZF_DEFAULT_COMMAND='fd --type f --hidden'
export FZF_CTRL_T_COMMAND='fd --type f --hidden --ignore-file <(echo .git)'
export FZF_CTRL_T_OPTS='--preview "bat {}"'
export FZF_ALT_C_COMMAND='fd --type d --hidden'
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"

fzf-branch-select() {
  # echo $(git branch --format='%(refname:short)' | fzf --multi --bind=ctrl-z:ignore --preview 'git lgf {}')
  echo $(git branch --verbose | cut -c3- | fzf --multi --bind=ctrl-z:ignore --preview 'git lgf {1}' | awk '{print $1}')
}

fzf-mod-files-select() {
  echo $(git status --short --branch | fzf --bind=ctrl-z:ignore --multi --preview='git df --color {2}' --header-lines=1 | cut -c 4-)
}

fzf-commits-select() {
  echo $(git log --pretty=format:'%C(green)%h %C(yellow)%ad %C(white)%s %C(blue)%an %C(dim)%C(blue)%-d' -100 | fzf --bind=ctrl-z:ignore --multi --preview='git show {1}' | awk '{print $1}')
}

fzf-branch-widget() {
  local selected="$(fzf-branch-select "$@")"
  READLINE_LINE="${READLINE_LINE:0:$READLINE_POINT}$selected${READLINE_LINE:$READLINE_POINT}"
  READLINE_POINT=$((READLINE_POINT + ${#selected}))
}

fzf-mod-files-widget() {
  local selected="$(fzf-mod-files-select "$@")"
  READLINE_LINE="${READLINE_LINE:0:$READLINE_POINT}$selected${READLINE_LINE:$READLINE_POINT}"
  READLINE_POINT=$((READLINE_POINT + ${#selected}))
}

fzf-commits-widget() {
  local selected="$(fzf-commits-select "$@")"
  READLINE_LINE="${READLINE_LINE:0:$READLINE_POINT}$selected${READLINE_LINE:$READLINE_POINT}"
  READLINE_POINT=$((READLINE_POINT + ${#selected}))
}

if [[ $- =~ i ]]; then
  bind -m emacs-standard -r "\C-xb"
  bind -m emacs-standard -x '"\C-xb": fzf-branch-widget'

  bind -m emacs-standard -r "\C-xf"
  bind -m emacs-standard -x '"\C-xf": fzf-mod-files-widget'

  bind -m emacs-standard -r "\C-xc"
  bind -m emacs-standard -x '"\C-xc": fzf-commits-widget'
fi
