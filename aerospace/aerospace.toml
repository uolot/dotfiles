# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# Feel free to omit keys that you don't use in your config.
# If the key is absent in your config the default value is taken from this config

# WORKSPACES
# b = browser
# c = calls (teams)
# d = develop (terminal, browser)
# e = media (spotify, youtube)
# p = personal (browsers, etc)
# q = temp 3 (sidecar)
# t = tasks (calendar, obsidian, things)
# w = work (browser, outlook, teams)
# x = temp 2 (external monitor)
# z = temp 1 (laptop)

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    # JankyBorders has a built-in detection of already running process,
    # so it won't be run twice on AeroSpace restart
    # 'exec-and-forget /opt/homebrew/opt/borders/bin/borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
    'exec-and-forget /opt/homebrew/opt/borders/bin/borders active_color=0xffffa500 inactive_color=0x44444444 width=8',
    # Run Sketchybar together with AeroSpace
    # sketchbar has a built-in detection of already running process,
    # so it won't be run twice on AeroSpace restart
    'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar'
]

# Notify Sketchybar about workspace change
exec-on-workspace-change = ['/bin/bash', '-c',
    '/opt/homebrew/opt/sketchybar/bin/sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
]

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = false
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
# outer.top =        30
outer.top = [{monitor."Built-in Retina Display" = 5}, 35]
outer.right =      10

# See https://nikitabobko.github.io/AeroSpace/guide#exec-env-vars
[exec]
inherit-env-vars = true
[exec.env-vars]
PATH = '/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}'

# See https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
# TODO: uncomment this
[workspace-to-monitor-force-assignment]
b = 1
c = 1
d = 2
e = 1
p = 2
q = 'sidecar'
t = 1
w = 2
x = 2
z = 1

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'
alt-enter = 'exec-and-forget open -n /Applications/WezTerm.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
# alt-shift-minus = 'resize smart -50'
# alt-shift-equal = 'resize smart +50'
alt-i = 'resize smart -100'
alt-u = 'resize smart +100'
alt-shift-i = 'resize smart -500'
alt-shift-u = 'resize smart +500'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-b = 'workspace b'
alt-c = 'workspace c'
alt-d = 'workspace d'
alt-e = 'workspace e'
alt-p = 'workspace p'
alt-q = 'workspace q'
alt-t = 'workspace t'
alt-w = 'workspace w'
alt-x = 'workspace x'
alt-z = 'workspace z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-b = 'move-node-to-workspace b'
alt-shift-c = 'move-node-to-workspace c'
alt-shift-d = 'move-node-to-workspace d'
alt-shift-e = 'move-node-to-workspace e'
alt-shift-p = 'move-node-to-workspace p'
alt-shift-q = 'move-node-to-workspace q'
alt-shift-t = 'move-node-to-workspace t'
alt-shift-w = 'move-node-to-workspace w'
alt-shift-x = 'move-node-to-workspace x'
alt-shift-z = 'move-node-to-workspace z'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
alt-semicolon = 'workspace-back-and-forth'

alt-n = "workspace --wrap-around next"
# alt-p = "workspace --wrap-around prev"

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
# alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# alt-w = 'mode workspace'
alt-m = 'mode monitor'

# Toggle between floating and tiling layout
alt-f = 'layout floating tiling'
alt-shift-f = 'macos-native-fullscreen'

alt-s = 'split horizontal'
alt-v = 'split vertical'

# Disable hide application shortcut
# cmd-h = []

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['mode main']
r = ['reload-config', 'mode main']
s = [
    # 'exec-and-forget sketchybar --trigger aerospace_refresh_workspaces',
    'exec-and-forget killall sketchybar',
    'mode main'
]
q = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
# backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

[mode.monitor.binding]
esc = ['mode main']
n = ['focus-monitor --wrap-around next', 'mode main']
p = ['focus-monitor --wrap-around prev', 'mode main']
shift-n = [
    'move-workspace-to-monitor --wrap-around next',
    'exec-and-forget sketchybar --trigger aerospace_refresh_workspaces',
    'mode main'
]
shift-p = [
    'move-workspace-to-monitor --wrap-around prev',
    'exec-and-forget sketchybar --trigger aerospace_refresh_workspaces',
    'mode main'
]

