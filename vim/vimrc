" ------ General settings ------

set nocompatible

syntax on
filetype on " enables filetype detection
filetype plugin on " enables filetype specific plugins
let mapleader=" "

set autoread " reload file after changed by running a !command
set backspace=indent,eol,start
set completeopt=menu,preview " show popup menu on completion with extra info
set completefunc=syntaxcomplete#Complete " set user-mode completions for <C-x><C-u>
set cursorline " highlight cursor line
set expandtab " convert tabs to spaces
set formatoptions=cq1tj " formatting - :help fo-table
set formatoptions+=ln   " new options to test
set formatoptions-=r    " unsetting, for test
set hidden " hide abandoned buffers
set hlsearch " highlight search results
set incsearch " go to first match when typing
set laststatus=2 " show statusline for single buffer
set lazyredraw " do not redraw screen until needed
set linebreak " do not wrap in the middle of a word
set list " display special chars
set listchars=tab:→\ ,trail:∎ " special chars for list mode
set nomodelineexpr  " disable modelinexpr, see: https://github.com/numirias/security/blob/master/doc/2019-06-04_ace-vim-neovim.md
set mouse= " disable mouse
set nrformats-=octal  " for C-a/C-x treat octal numbers (starting with 0) as decimal numbers
set number " display line numbers
set omnifunc=syntaxcomplete#Complete " enable omnicompletion
set scrolloff=3 " keep lines above/below cursor line
set shiftwidth=0 " use tabstop number of tabs to indent
" set showbreak=↪ " mark wrapped lines
set showcmd " show last command on bottom
set showmatch " highlight matching bracket
set splitbelow " open new horizontal splits below
set splitright " open new vertical splits on the right
set shiftround " round the indent spacing to the next multiple of shiftwidth
set tabstop=4 " tab key inserts 4 spaces
set updatetime=100
set wildmenu " enable filename completion
set wildmode=list:longest,full
set nowrapscan " do not wrap to beginning of the file when searching


" ------ Plugins ------

runtime ftplugin/man.vim

" install plug.vim
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall
endif

call plug#begin('~/.vim/plugged')


source $HOME/.dotfiles/vim/plugins.vim
source $HOME/.dotfiles/vim/plugins-hello.vim
source $HOME/.dotfiles/vim/plugins-goodbye.vim
source $HOME/.dotfiles/vim/files.vim
source $HOME/.dotfiles/vim/files-fzf.vim
source $HOME/.dotfiles/vim/functions.vim
source $HOME/.dotfiles/vim/dev.vim
source $HOME/.dotfiles/vim/python.vim
source $HOME/.dotfiles/vim/textobj.vim
source $HOME/.dotfiles/vim/vimwiki.vim
source $HOME/.dotfiles/vim/markdown.vim
source $HOME/.dotfiles/vim/git.vim

call plug#end()

filetype plugin indent on

" ------ Imports ------

" colors
source $HOME/.dotfiles/vim/uolors.vim
" status line
source $HOME/.dotfiles/vim/statusline.vim
" abbrevs
source $HOME/.dotfiles/vim/abbrev.vim
" mappings
source $HOME/.dotfiles/vim/mappings.vim

" ------ Neomake ------
" call neomake#configure#automake({
"             \ 'BufWritePost': {},
"             \ }, 1000)
